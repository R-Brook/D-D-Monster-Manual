import React from "react";
import client from "../../../apollo-graphql/apollo-client";

import Head from "next/head";
import { MonsterProps } from "types/monster";
import { MONSTER_QUERY } from "apollo-graphql/queries/monster";
import { MONSTER_INDEX_QUERY } from "apollo-graphql/queries/monsterByIndex";

export default function MonsterPage({ monsterData }: MonsterProps) {
  console.log(monsterData);

  return (
    <>
      <Head>
        <title> - D&D 5e Monster Manual</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <h1>Foo</h1>
      </main>
    </>
  );
}

export const getStaticPaths = async () => {
  const { data } = await client.query({
    query: MONSTER_INDEX_QUERY,
  });
  return {
    paths: data.monsters.map((param: { index: any }) => ({
      params: { index: param.index },
    })),
    fallback: false,
  };
};

export async function getStaticProps({ params }: any) {
  let monsterData = {} as MonsterProps;
  await client
    .query({
      query: MONSTER_QUERY,
      variables: {
        path: params.index,
      },
    })
    .then((res) => {
      monsterData = res.data.monster;
    });
  return {
    props: {
      monsterData,
    },
  };
}
