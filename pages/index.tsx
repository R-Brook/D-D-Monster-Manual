import Head from "next/head";
import client from "../apollo-graphql/apollo-client";
import { Card } from "components/card";
import { MONSTERS_QUERY } from "apollo-graphql/queries/monsters";
import { MonstersProps } from "types/monsters";
import { hasImageInPublicFolder } from "utilities/images";

export default function Home({ monstersData }: MonstersProps) {
  return (
    <>
      <Head>
        <title>D&D 5e Monster Manual</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container">
        <div className="card-container">
          {monstersData.map((monster) => (
            <Card
              key={monster.index}
              name={monster.name}
              index={monster.index}
              image={
                monster.image && monster.image.length > 0
                  ? `https://www.dnd5eapi.co${monster.image}`
                  : hasImageInPublicFolder.includes(monster.index)
                  ? `/images/monsters/${monster.index}.jpg`
                  : null
              }
              type={monster.type}
              size={monster.size}
              hit_points={monster.hit_points}
              armor_class_value={monster.armor_class[0].value}
            />
          ))}
        </div>
      </main>
    </>
  );
}

export async function getStaticProps() {
  let monstersData = {} as MonstersProps;

  await client
    .query({
      query: MONSTERS_QUERY,
    })
    .then((res) => {
      monstersData = res.data.monsters;
    });

  return {
    props: {
      monstersData,
    },
  };
}
